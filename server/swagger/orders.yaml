paths:
  /orders:
    get:
      tags:
      - "Orders"
      summary: "Get all Orders"
      operationId: "listOrders"
      security:
      - bearerAuth: []
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "Limit the number of returned results"
        type: "integer"
        format: "int32"
        default: 50
        minimum: 1
      - name: "offset"
        in: "query"
        description: "Offset the number of returned result from an index of 0"
        type: "integer"
        format: "int64"
        default: 0
        minimum: 0
      responses:
        200:
          description: "Successfully Retrieved Orders"
          schema:
            type: "object"
            properties:
              results:
                type: "array"
                items:
                  $ref: "#/definitions/Order"
              message:
                type: "string"
                description: |
                  "If empty result, it shall state 'No results were found'. If results found,
                  it shall state 'Found X result(s)"
              total:
                type: "integer"
                description: "The actual number of results found"
              offset:
                type: "integer"
                description: "The returned offset from an index of 0"
              limit:
                type: "integer"
                description: "Limit of the number of results returned"
        400:
          description: "Invalid Input"
          schema:
            type: "object"
            properties:
              status:
                type: "integer"
                description: "The http status code"
              code:
                type: "integer"
                description: "The error code"
              message:
                type: "string"
                description: "The message associated to the error code"
        403:
          description: "Unauthorized Error"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "The Access Denied Error message"
      x-swagger-router-controller: "orders"
    post:
      tags:
      - "Orders"
      summary: "Create a order"
      operationId: "createOrder"
      security:
      - bearerAuth: []
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Order object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/OrderCreateModify"
      responses:
        201:
          description: "Successfully Created Order"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Order"
              message:
                type: "string"
        400:
          description: "Invalid Input"
          schema:
            type: "object"
            properties:
              status:
                type: "integer"
                description: "The http status code"
              code:
                type: "integer"
                description: "The error code"
              message:
                type: "string"
                description: "The message associated to the error code"
        403:
          description: "Unauthorized Error"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "The Access Denied Error message"
      x-swagger-router-controller: "orders"
  /orders/{orderId}:
    parameters:
    - name: "orderId"
      in: "path"
      required: true
      type: "integer"
      description: "The Id of the order"
    get:
      tags:
      - "Orders"
      summary: "Get a Order's metadata"
      operationId: "getOrder"
      security:
      - bearerAuth: []
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfully Retrieved Order"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Order"
              message:
                type: "string"
        403:
          description: "Unauthorized Error"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "The Access Denied Error message"
        404:
          description: "Order does not exist"
      x-swagger-router-controller: 'orders'
    put:
      tags:
      - "Orders"
      summary: "Modify a Order"
      operationId: "modifyOrder"
      security:
      - bearerAuth: []
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Order object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/OrderCreateModify"
      responses:
        200:
          description: "Successfully Modified Order"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Order"
              message:
                type: "string"
        400:
          description: "Invalid Input"
          schema:
            type: "object"
            properties:
              status:
                type: "integer"
                description: "The http status code"
              code:
                type: "integer"
                description: "The error code"
              message:
                type: "string"
                description: "The message associated to the error code"
        403:
          description: "Unauthorized Error"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "The Access Denied Error message"
        404:
          description: "Order not found"
      x-swagger-router-controller: "orders"
    delete:
      tags:
      - "Orders"
      summary: "Delete a Order"
      operationId: "deleteOrder"
      security:
      - bearerAuth: []
      responses:
        200:
          description: "Successfully Deleted Order"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Order"
              message:
                type: "string"
        400:
          description: 'Cannot be deleted'
          schema:
            type: 'object'
            properties:
              status:
                type: 'integer'
                description: 'The http status code'
              code:
                type: 'integer'
                description: 'The error code'
              errors:
                type: 'array'
                items:
                  type: 'string'
                  description: 'The error messages'
        403:
          description: "Unauthorized Error"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                description: "The Access Denied Error message"
        404:
          description: "Order does not exist"
      x-swagger-router-controller: 'orders'
definitions:
  Order:
    type: "object"
    description: "Order object"
    properties:
      id:
        type: "integer"
        description: |
          "The id of Order"
      brand:
        type: "string"
        description: "Brand of the Order Product"
      model:
        type: "string"
        description: "Model of the Order Product"
      variant:
        type: "string"
        description: "Variant of Order Product"
      leasingPeriod:
        type: "integer"
        description: "Leasing Period value of Order Product"
      kilometers:
        type: "integer"
        description: "Kilometers value of Order Product"
      color:
        type: "object"
        description: "The Color of Order Product"
      profession:
        type: "string"
        description: "The Profession of Order Product"
      equipment:
        description: "The Equipment of Order Product"
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      downPayment:
        type: "integer"
        description: "The Downpayment of Order Product"
      monthlyPrice:
        type: "integer"
        description: "The MonthlyPrice of Order Product"
      firstName:
        type: "string"
        description: "The First name of Order"
      lastName:
        type: "string"
        description: "The Last name of Order"
      email:
        type: "string"
        description: "The Email of Order"
      phone:
        type: "string"
        description: "The Phone number of Order"
      companyName:
        type: "string"
        description: "The Company Name of Order"
      numberOfEmployees:
        type: "integer"
        description: "The Number of Employees"
      companyIndustry:
        type: "string"
        description: "The Company Industry of Order"
      cvr:
        type: "integer"
        description: "The Company Identification Number"
      address:
        type: "object"
        description: "The Order Address"
      newsletter:
        type: "boolean"
        description: "The Opted-in Newsletter of Order"
      message:
        type: "string"
        description: "The Order Description of Order"
      createdAt:
        type: "string"
        format: "date"
        description: "The date at which the Order was created"
      updatedAt:
        type: "string"
        format: "date"
        description: "The date at which the Order was last updated"
  OrderCreateModify:
    type: "object"
    description: "the model to create or modify a Order object"
    properties:
      brand:
        type: "string"
        description: "Brand of the Order Product"
      model:
        type: "string"
        description: "Model of the Order Product"
      variant:
        type: "string"
        description: "Variant of Order Product"
      leasingPeriod:
        type: "integer"
        description: "Leasing Period value of Order Product"
      kilometers:
        type: "integer"
        description: "Kilometers value of Order Product"
      color:
        type: "object"
        description: "The Color of Order Product"
      profession:
        type: "string"
        description: "The Profession of Order Product"
      equipment:
        description: "The Equipment of Order Product"
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      downPayment:
        type: "integer"
        description: "The Downpayment of Order Product"
      monthlyPrice:
        type: "integer"
        description: "The MonthlyPrice of Order Product"
      firstName:
        type: "string"
        description: "The First name of Order"
      lastName:
        type: "string"
        description: "The Last name of Order"
      email:
        type: "string"
        description: "The Email of Order"
      phone:
        type: "string"
        description: "The Phone number of Order"
      companyName:
        type: "string"
        description: "The Company Name of Order"
      numberOfEmployees:
        type: "integer"
        description: "The Number of Employees"
      companyIndustry:
        type: "string"
        description: "The Company Industry of Order"
      cvr:
        type: "integer"
        description: "The Company Identification Number"
      address:
        type: "object"
        description: "The Order Address"
      newsletter:
        type: "boolean"
        description: "The Opted-in Newsletter of Order"
      message:
        type: "string"
        description: "The Order Description of Order"

